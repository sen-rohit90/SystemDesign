<mxfile host="app.diagrams.net" modified="2023-10-20T13:56:55.683Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36 Edg/118.0.2088.46" etag="KZFPEsuDIfwUruMab9l5" version="22.0.6" type="github">
  <diagram name="Page-1" id="27o033FKSgjL3gS65ODX">
    <mxGraphModel dx="1158" dy="657" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="qkrLLhdO1Dh7-_sczCZN-1" value="OAuth 2.0&lt;br&gt;- Security standard where you give one app the permission to access your data in another application&lt;br&gt;- Instead of giving your username and password, you can give them a key that gives them specific permission to access your data or do thign son your behalf (Delegeated Authorization)&amp;nbsp;&lt;br&gt;- You can take back that key when you wish&amp;nbsp;&lt;br&gt;-&amp;nbsp;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="60" y="50" width="310" height="140" as="geometry" />
        </mxCell>
        <mxCell id="qkrLLhdO1Dh7-_sczCZN-2" value="Resource Owner - owner of the identity, acy actions that can be performed on that id&lt;br&gt;Client - the third party app, lets say a Quote Sharing website&lt;br&gt;Authorisat Server- app that knows the resource owner, where the resoirce ownere already ahs a a coount. it is the API or service that clients want to use on behalf of the resource owner&lt;br&gt;Re-direct URI - url which AS will redirect the RO back to , after granting permosson to the client&lt;br&gt;Response Type - type of info the client expects to recieve - for eg, a authorixatin code&lt;br&gt;Scope - granlular permission the client wants to access the data&lt;br&gt;Consent - verify scope with the RO, if they wan tot give the client permission&lt;br&gt;Client ID - used to idfy the client with the AS&lt;br&gt;Client Secret - Scert which only client and AS know for data share privately behind the scenes&lt;br&gt;Auth Code - short lived tmep code, that AS sends back to Client. The Client sends code back&amp;nbsp; to AS along with client secret in exchange for ac access token&lt;br&gt;Access token - the key the client will use to communicate with the Resource Server - gives client the permission to request data / services / perform action with the RS on your behalf.&lt;br&gt;&amp;nbsp;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="60" y="210" width="410" height="320" as="geometry" />
        </mxCell>
        <mxCell id="qkrLLhdO1Dh7-_sczCZN-3" value="OIDC&amp;nbsp;&lt;br&gt;- thin layer sits on top of Oauth 2.0 and adds functionality around login and profile info&lt;br&gt;- instead of key, OIDC gives client a badge, badge gives client spl permissions and basic info aboutt who you are?&lt;br&gt;- OIDC enables a client to start a login session - authentication&lt;br&gt;- Authn server supporting OIDC, is called Idp&amp;nbsp;&lt;br&gt;- Also used for SSO&lt;br&gt;- link -&amp;nbsp;&lt;a href=&quot;https://developer.okta.com/blog/2019/10/21/illustrated-guide-to-oauth-and-oidc&quot;&gt;An Illustrated Guide to OAuth and OpenID Connect | Okta Developer&lt;/a&gt;" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="60" y="570" width="570" height="130" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
